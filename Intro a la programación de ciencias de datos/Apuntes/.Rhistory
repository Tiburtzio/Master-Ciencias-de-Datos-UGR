a=matrix(1:12,nrow=3,byrow=FALSE)
a=matrix(1:12,nrow=3,byrow=FALSE)
colnames(a)=c("A","B","C")
rownames(a)=c('1','2','x','y')
dimnames(a)
colnames(a)<-("A","B","C")
colnames(a)<-c("A","B","C")
colnames(a)=c('1','2','x','y')
a=matrix(1:12,nrow=3,byrow=FALSE)
rownames(a)<-c("A","B","C")
colnames(a)=c('1','2','x','y')
dimnames(a)
#Indexing
a[1]
#Indexing
a[1,1]
a[,1] # Columna
a[1,1] # Único elemento.
a[1,] # Fila
a[,1] # Columna
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R')
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
# Ejercicio 4.
x=month.name[1:3]
y=month.name[4:7]
setdiff(x,y)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
setdiff(as.vector('xy'),as.vector('x'))
diff(x,y)
intersect(x,y)
x
y
y=month.name[3:7]
intersect(x,y)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
intersection(x,y)
interaction(x,y)
x
y
intersect
intersect(x,y)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
# Ejercicio 5
z=c(5,2,-3,8)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
z=c(5,2,-3,8)
z2=z**2
z2[z2>8]
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios1.R', echo=TRUE)
matrix(data=5, nr=2, nc=2)
matrix(1:6, 2, 3)
matrix(1:6, 2, 3, byrow=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
# Ejercicio 1.6
help(dim())
# Ejercicio 1.6
help(dim
# Ejercicio 1.6
help(dim)
# Ejercicio 1.6
dim(m)
m_array = array(data=m,dim=dim(m))
m_array
x
dim(x)
# Ejercicio 1.7
x = array(data=seq(1,50),dim=c(5,5,2))
x
# Ejercicio 1.7
x = array(1:50,dim=c(5,5,2))
x
m2 = matrix(2, nrow=2, ncol=2); m2
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
M1 = rbind(m1,m2); M1
M2 = cbind(m1,m2); M2
# Ejercicio 1.9
M12 = M1 %*% M2; M12
# Ejercicio 1.10
t_M1 = t(M1)
# Ejercicio 1.10
t_M1 = t(M1); t_M1
# Ejercicio 1.11
diag(m1)
diag(m1)
diag(rbind(m1,m2) %*% cbind(m1,m2))
diag(3)
v=c(10,20,30)
diag(v)
diag(2.1, nrow=3, ncol=5)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
# Ejercicio 1.12
x = matrix(1:100, ncol=10)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
order(x)
order(x,partial=x[,2],decreasing = T)
order(x,partial=c(2),decreasing = T)
order(x[,2],decreasing = T)
x1 = x[order(x[,2],decreasing = T),2]
x1
x1 = x
x1[,2] = x[order(x[,2],decreasing = T)]
x1
x1[,2] = x[order(x[,2],decreasing = T),2]
x1
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
star_wars_matrix = matrix(rbind(new_hope,empire_strikes,return_jedi)); star_wars_matrix
star_wars_matrix = matrix(rbind(new_hope,empire_strikes,return_jedi), ncol=2); star_wars_matrix
star_wars_matrix
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
worldwide_vector=c(sum(star_wars_matrix[1,]),sum(star_wars_matrix[2,]),sum(star_wars_matrix[3,]))
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
colnames(all_wars_matrix)=c('US','Non-US','Total'); all_wars_matrix
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
mean(star_wars_matrix[,2])
mean(star_wars_matrix[1:2,2])
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Descargas/Curso0.r', echo=TRUE)
source('~/Descargas/Curso0.r', echo=TRUE)
source('~/Descargas/Curso0.r', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Curso0.r', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Curso0.r', echo=TRUE)
x = 1:4
sum(which(x%%2!=0))
which(x%%2!=0)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
is.na(nas)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
nas
nas
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
nas
which(is.na(x))
which(is.na(nas))
class(which(is.na(nas)))
nas[which(is.na(nas))] = 0
nas
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Curso0.r', echo=TRUE)
c="Hola"
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
strsplit(c,"[a,e,i,o,u]")
strsplit(c,c("[a,e,i,o,u]",""))
strsplit(c,c("[a,e,i,o,u]","![a,e,i,o,u]"))
strsplit(c,split=c("[a,e,i,o,u]","![a,e,i,o,u]"))
strsplit(c,"[a,e,i,o,u]")
strsplit(c,"^[a,e,i,o,u]")
strsplit(c,"^[a,e,i,o,u]+")
strsplit(c,"^[a,e,i,o,u]")
strsplit(c,"^[a,e,i,o,u]")
strsplit(c,"![a,e,i,o,u]")
strsplit(c,"!([a,e,i,o,u])")
strsplit(c,"([a,e,i,o,u])")
strsplit(c,"(![a,e,i,o,u])")
strsplit(c,"(?![a,e,i,o,u])")
strsplit(c,"(?![a,e,i,o,u])+")
strsplit(c,"(?![a,e,i,o,u]).+")
strsplit(c,"?![a,e,i,o,u].*")
strsplit(c,"(?![a,e,i,o,u]).*")
strsplit(c,"[a,e,i,o,u].*")
strsplit(c,"[a,e,i,o,u].")
strsplit(c,"[a,e,i,o,u]")
strsplit(c,".[a,e,i,o,u]")
strsplit(c,"[a,e,i,o,u]")
which(strsplit)
which(strsplit(c,"[a,e,i,o,u]"))
grep(c,strsplit(c,"[a,e,i,o,u]"))
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Curso0.r', echo=TRUE)
unlist(c)
grep([aeiou],strsplit(c,.))
grep([aeiou],strsplit(c,"."))
grep("[aeiou]",strsplit(c,"."))
grep("[aeiou]",strsplit(c,"."))
strsplit
strsplit(c,'.')
strsplit(c,'')
grep("[aeiou]",strsplit(c,""))
grep("[aeiou]",strsplit(c,""))
grep("[ao]",strsplit(c,""))
grep("[oa]",strsplit(c,""))
grep("[aeiou]",unlist(strsplit(c,"")))
grep("^[aeiou]",unlist(strsplit(c,"")))
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
c
vocales=grep("[aeiou]",unlist(strsplit(c,"")))
consonantes=which(!(c %in% vocales))
c[vocales]
vocales
class(vocales)
c[vocales]
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
sep = unlist(strsplit(c,""))
vocales = grep("[a,e,i,o,u]",separada)
vocales = grep("[a,e,i,o,u]",sep)
vocales
consonantes=which(!(sep %in% vocales ))
consonantes
consonantes=which(!(c %in% vocales ))
consonantes
consonantes=which(!(c %in% sep[vocales] ))
conso
consonantes
consonantes=which(!(c %in% c[vocales] ))
consonantes
c %in%c[vocales]
c %in% vocales
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
vect = c(1,2,3,4)
which(vect,2)
which(vect==2)
which(vect,5)
which(vect==5)
vect = c(1,2,2,3,4)
which(vect==2)
which(vect==2)[1]
which(vect==2)[1]
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
vect
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
which(vect==4)
which(vect==4)*y
( m <- matrix(1:12, 3, 4) )
div.3 <- m %% 3 == 0
which(div.3)
which(div.3, arr.ind = TRUE)
rownames(m) <- paste("Case", 1:3, sep = "_")
which(m %% 5 == 0, arr.ind = TRUE)
dim(m) <- c(2, 2, 3); m
which(div.3, arr.ind = FALSE)
which(div.3, arr.ind = TRUE)
vm <- c(m)
dim(vm) <- length(vm) #-- funny thing with  length(dim(...)) == 1
which(div.3, arr.ind = TRUE)
( m <- matrix(1:12, 3, 4) )
div.3 <- m %% 3 == 0
which(div.3)
which(div.3, arr.ind = TRUE)
rownames(m) <- paste("Case", 1:3, sep = "_")
which(m %% 5 == 0, arr.ind = TRUE)
dim(m) <- c(2, 2, 3); m
which(div.3, arr.ind = FALSE)
which(div.3, arr.ind = TRUE)
vm <- c(m)
dim(vm) <- length(vm) #-- funny thing with  length(dim(...)) == 1
which(div.3, arr.ind = TRUE)
which(vect==NULL)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/ApuntesFunciones.R', echo=TRUE)
print("Introduzca un string:")
m_string = as.character(scan())
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = as.integer(scan())
paste(rep(m_string,m_number),sep='')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
rep(m_string,m_number)
paste(rep(m_string,m_number),sep='')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
rep(m_string,m_number)
paste(rep(m_string,m_number),sep='')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
rep(m_string,m_number)
paste(rep(m_string,m_number),collapse = '')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
unlist(rep(m_string,m_number))
paste(rep(m_string,m_number),collapse = '')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
unlist(rep(m_string,m_number))
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
class(rep(m_string,m_number))
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
class(rep(m_string,m_number))
unlist(rep(m_string,m_number))
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
paste(rep("alberto",2),sep="")
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
paste(unlist(rep("alberto",2)),sep="")
paste(unlist(rep("alberto",2)),sep="")
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
m_list = rep("Alberto",2)
m_list = rep("Alberto",2)
paste(m_list)
paste(m_list,' ')
paste(m_list,collapse = ' ')
paste(m_list,collapse = '')
paste(m_list,sep = '')
paste(m_list,collapse= '')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
m_list = rep(m_string,m_number)
paste(m_list,collapse= '')
print("Introduzca un string:")
m_string = scan("",what=character())
print("Introduzca un número:")
m_number = scan("",what=integer())
m_list = rep(m_string,m_number)
paste(m_list,collapse= '')
seq(2,20,length.out = 10)
cat(matrix(seq(2,20,length.out = 10),nrow=10),"dos.txt")
write.table(matrix(seq(2,20,length.out = 10),nrow=10),"dos.txt")
write.table(matrix(seq(2,20,length.out = 10),nrow=10),"dos.txt",row.names = F,col.names = F)
unoaldiez = 1:10
unoaldiez*2
unoaldiez=1:10
write.table(matrix(unoaldiez*2,nrow=10),"dos.txt",row.names = F,col.names = F)
write.table(matrix(unoaldiez*3,nrow=10),"tres.txt",row.names = F, col.names = F)
write.table(matrix(unoaldiez*5,nrow=10),"cinco.txt",row.names = F, col.names = F)
tablados = scan("dos.txt")
m = cbind(tablados,tablatres,tablacinco); m
tablados = scan("dos.txt")
tablatres = scan("tres.txt")
tablacinco = scan("cinco.txt")
m = cbind(tablados,tablatres,tablacinco); m
write.csv(m[1:5,],"prime.txt",sep=",")
write.csv(m[1:5,],"prime.txt")
write.csv(m[1:5,],"prime.txt",row.names = F)
write.csv(m[6:10,],"fin.txt",row.names = F)
rep("x",3)
paste(rep("x",3),collapse = '')
paste(rep(paste(rep("x",3),collapse = ''),4),sep = '\n')
paste(rep(paste(rep("x",3),collapse = ''),4),collapse = '\n')
print(rep(paste(rep("x",3),collapse = ''),4),collapse = '\n')
print(rep(paste(rep("x",3),collapse = ''),4))
cat(rep(paste(rep("x",3),collapse = ''),4))
cat(rep(paste(rep("x",3),collapse = ''),4),sep = '\n')
print("Introduzca filas:")
f = scan("",what = integer())
print("Introduzca columnas:")
c = scan("",what=integer())
cat(rep(paste(rep("x",c),collapse = ''),f),sep = '\n')
print("Introduzca filas:")
f = scan("",what = integer())
sdf
df
equis = rep('x',times=c)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
z$levels
str(z)
z[z=='p'] = 'w'
z
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
z
levels(x)
levels(z)
levels(z)[levels(z)=='p'] = 'w'
z
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
# Ejercicio 4.1
str(USArrests)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
source('~/Universidad/Intro a la programación de ciencias de datos/Apuntes/Ejercicios2.R', echo=TRUE)
names(USArrests)
rownames(USArrests)
colnames(USArres)
colnames(USArrests)
USArrests[1:6]
USArrests[1:6,]
ord_usarrests = USArrests[order(USArrests[,"UrbanPop"],decreasing = T),]
ord_usarrests
USArrests["Murder",]
USArrests[,"Murder"]
USArrests[2:3,"Murder"]
USArrests[2:4,"Murder"]
USArrest[1:5,]
USArrests[1:5,]
USArrests[,1:2]
USArrests[,c(1,3)]
USArrests[1:5,1:2]
UsArrest[,"Murder"]
UsArrest[,"Murder"]
USArrests[,"Murder"]
which.min(USArrests[,"Murder"])
names(which.min(USArrests[,"Murder"]))
USArrest[which.min(USArrests[,"Murder"]),]
USArrests[which.min(USArrests[,"Murder"]),]
USArrest[which(USArrests[,"Murder"] < 4.0),]
USArrests[which(USArrests[,"Murder"] < 4.0),]
USArrests[which(USArrests[,"Murder"] <= 4.0),]
USArrests[which(USArrests[,"Murder"] < 4.0),]
sumarry
sumary(USArrests)
summary(USArrests)
USArrests[which(USArrests[,"UrbanPop"] >= 75),]
